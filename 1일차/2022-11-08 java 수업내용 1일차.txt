Window -> preferences -> General -> 워크스페이스-> UTF-8로 설정

기본 탭들을 잘못해서 삭제했는데, 그 수가 너무 많다.. 그러면
window의 New Window 항목을 선택하면 새로운 창이 생성된다
기존 창은 끄고, 새로운 창에서 작업하면 된다.

윈도우에 쇼 뷰 항목에서 원하는 탭을 추가한다

perspective = 기본 구조

현재 우리의 perspective는 java ee

perspective는 윈도우 메뉴의 perspective 항목에 있음.
window -> perspective -> open perspective -> other -> java로 설정


java에서는 프로젝트 명명법은 없다: 
- 무조건 영문자로만 한다
- 첫글자는 대문자로 시작하자
- 띄어쓰기 하지 말자. 대신 띄어써야 할 글자의 첫 글자를 대문자로 하자
프로젝트명: 
- 자바테스트: 영문자로만 사용하기로 했는데...위반
- javatest: 첫 글자를 대문자로 하기로 했는데...위반
- Java test: 띄어쓰기 하지 않기로 했는데...위반
- Javatest: JavaTest로 해야된다

그러나 
클래스 명명법
메서드 명명법
변수 명명법
상수 명명법 은 존재한다.

Hello world라는 이름의 자바 프로젝트를 만들어 주세요
컨트롤+n -> 자바프로젝트 -> 프로젝트명 HelloWorld ->next -> finish

src = source 의 약자

package 명명법: 
- 전부 영어로 작성합니다
- 전부 소문자로만 작성합니다
- 자기 회사의 도메인 키워드를 거꾸로 적습니다.
- 회사에 도메인이 없으면 있다고 가정 하에 적습니다.

kakao.co.kr -> kr.co.kakao 적는다
패키지로 만든다면?
src 한번클릭 -> 컨트롤+n -> package 적고 -> next -> Name에 com.naver 적고 피니쉬 한다
naver.com -> com.naver                                                   kr.co.dwitt
dwitt.co.kr -> kr.co.dwitt

package: 폴더(=디렉토리)입니다.

1. C드라이브에 ttt라는 폴더 만듦.
2. 두 개의 파일을 만듦
- 이름이 같게 만듦
- 바탕화면에 하나, 다운로드에 하나
3. 이 두개의 파일을 C의 ttt 폴더에 넣어 줄 겁니다
4. 결과는?
- 두개의 파일이 모두 존재한다
- 하나의 파일만 존재한다

1. 자바 프로젝트: Hi world 생성해 주세요
2. 패키지 만들기
- naver.com
- samsung.com
- lg.co.kr
- dwitt.co.kr
- daum.net

HiWorld 마우스오른쪽 ->런 as -> 자바애플리케이션 실행하면 밑에 같은 에러 메시지 뜸
 Launch Error
Selection does not contain a main type -> 메인 메서드가 없어서 나온 에러 메시지 이다

class 명명법
- 자바 프로젝트명 명명법과 같음
- 전부다 영어
- 첫글자 대문자
- 띄어쓰기 하지말고 띄어쓰는 글자의 첫 글자를 대문자

main ex라는 클래스를 만듦.

#############
public static void main(String[] args){
//public 접근제어지시자 4개 중 하나로 가장 접근을 용이하게 하는 지시자
// static: 메서드의 저장 위치를 의미하며, 추가적인 의미가 있음
// void: 반환형이라고 하며, 반환되는 데이터의 자료형의 약자로 반환값에 따라 달라짐
// main: 메서드의 이름으로 해당 메서드는 자바 프로그래밍에서 반드시 있어야함
// (): 매개변수 정의 구역
// string[]: 매개변수를 선언할 때 사용하는 매개변수의 자료형
// args: main()메서드의 매개변수명

############
1. 자바프로젝트 생성
- ctrl + n 해서, java project라고 입력하고 엔터
- 프로젝트 명명법은 없으나 우리끼리 약속
- 다 영어로 쓰자
- 첫글자 대문자
- 띄어쓰기 하지 말자. 대신 띄어쓰는 글자의 첫 글자를 대문자로 하자
- 프로젝트가 저장되는 위치는: workspace_java

2. package  생성
- ctrl + n, package라고 입력하고 엔터
- 패키지 명명법: 회사가 망하거나 내가 해고되거나
- 다 영어로 쓰자
- 다 소문자로 쓰자
- 회사의 도메인을 이용하자
- 도메인의 키워드를 거꾸로 배열
- 폴더 = 디렉토리
- 파일이 중복되어도 유지가 될 수 있게 되어 있음.

3. 프로젝트 실행
- 프로젝트명에 마우스를 클릭하고, 마우스 우클릭
- run as - java pro~ 선택
- main 포함되어 있지 않다는 에러 메시지가 나옴

4. class 생성
- ctrl + n해서, class 입력 후 엔터
- 명명법
- 프로젝트 명명법과 동일함.
- 다 영문으로 작성
- 첫 글자 대문자
- 띄어쓰기 하지 말고, 띄어쓰는 단어의 첫 글자를 대문자

5. main( )메서드 생성
- public static void main(String[] args){ 

}

6. main 적고 ctrl + space : main( )메서드 자동 완성

7. 프로젝트에 마우스 클릭, 마우스 우클릭 - run as - java appl~

8. main( )메서드의 본문({ })에 System.out.println("hello world")
를 입력 후 다시 실행..

9. main( )메서드에 System.out.println("hello world") 100번 찍기
sysout 적고 ctrl + space를 이용해서 100번 찍기..

10. 변수의 효용
- 유지보수 용이하게 하려고..

11.  변수 생성 방법


// String : 자료형
// str : 변수명
// = 대입연산자(오른쪽에 있는걸 왼쪽에 넣어주세요)
// "hello world" : 자료형에 맞는 값
// ; : 코드 완료
String str = new String("hello world");
// 변수 선언 공식
// 자료형 변수명 = 자료형에 맞는 값;
System.out.println(str);
System.out.println(str);
System.out.println(str);
System.out.println(str);
System.out.println(str);
System.out.println(str);
System.out.println(str);
System.out.println(str);
System.out.println(str);
System.out.println(str);

12. 변수 선언 공식
- 자료형 변수명 = 자료형에 맞는 값;

13. 참조 자료형의 변수 선언 공식
- 자료형 변수명 = new 자료형(값1, 값2... );

- String str = new String("hi");
- StringBuffer sb = new StringBuffer("hi");
- Dog d1 = new Dog("he");
- Hero superman = new Hero("hi");
- Animals snake = new Animals("소시지")

참조자료형과 참조자료형의 자료형에 맞는 값에는 일정한 규칙이 있다

14. 기본자료형의 변수 선언 공식

java 자료형
|
|
|----------------기본자료형----- boolean(불리언): true, false
|                                  |---- char(차르)--- 작은 따옴표 안에 한 글자만 표현 'a'(0)  'ab'(x)
|                                  |---- byte(바이트) -128 ~ 127(0이 있기때문에 빼준다), 1바이트 = 8비트, 정수
|                                  |---- short(숏트)  종류가 있다는 것만 알면 된다 , 정수
|                                  |---- int(인트) 4바이트 = 32비트, 약 -21억 ~ 21억, 정수
|                                  |---- long(롱)------ 정수
|                                  |---- float(플롯)
|                                  |---- double(더블)
|
|
|
|-----------------참조자료형: 기본자료형이 아닌 자료형

기본 자료형의 종류 8개
기본 자료형에 맞는 값 표기 방법
기본 자료형에 맞는 값의 표현 범위

논리형
boolean: true, false
boolean a = true;        boolean b = false;  값만 가질 수 있다

문자형
char: ''(작은따옴표) 안에 한 글자만 적음
char c = 'a';
char d = '안';
char e = '안녕'; (X) 틀림

정수형
byte: -128 ~ 127
short
int: 약 -21억 ~ 21억, 정수형의 기본자료형
long: -21억보다 작은 값, +21억보다 큰 값을 표현할 떄.. 값을 표현할 때 마지막 L/l을 붙임
- long z = -2500000000;  ->  long z = -2500000000L;
                                       long z = -25L;

실수형(소수점이 있는 데이터): 정밀도.. 소수를 표현할 때 얼마나 정밀하게 표현해야 하나?
float: 값을 표현할 때, 끝에 F/f 를 붙여줌..
- float f = 3.14F;
double: 실수형의 기본자료형..

변수에 대한 명명법
- 무조건 다 영어
- 첫글자는 무조건 소문자로 적고
- 띄어쓰기 안함. 대신 띄어쓰기는 글자의 첫 글자를 대문자로 표기
- hello world  -> helloWorld 이렇게 작성함

###########
package kr.co.lg;

import com.naver.Dog;
import com.samsung.Cat;

public class MainEx {

	public static void main(String[] args) {
		
		// com.naver 패키지에 있는 Dog클래스가 자료형
		// 변수명 d1
		// 위 정보를 이용해서 d1 변수를 선언하시오
		// 자료형 변수명 = 자료형에 맞는 값;
		// 참조자료형 변수명 = new 참조자료형();
		Dog d1 = new Dog();
		
		// com.samsung 패키지에 있는 Cat 클래스가 자료형
		// 변수명 c1
		// 위 정보를 이용해서 c1 변수를 선언하시오
		Cat c1 = new Cat(1);
		
		// 314를 변수 a에 입력하세요
		int a = 314;
		
		// true를 변수 b에 입력하세요
		boolean b = true;
		
		// 3.14를 변수 c에 입력하세요, 단, 정밀도는 고려하지 않고 메모리를 절약하도록
		// 선언하세요
		// float 은 4바이트 먹고 double은 8바이트 먹는다
		float c = 3.14f;
		
		// "hello world"를 변수 d에 입력하세요
		String d = new String("hello world");
		
		
	}
}























































































































































































































































































































































































































































































































































































































