1일차
이번 팀프로젝트에서 로그인, 로그아웃, 회원가입을 만들게 되었다. 수업시간에 배운대로 한다고 
코드를 작성했지만 생각대로 잘 되지 않았다. 모든 홈페이지에 가면 기본적으로 있는 로그인, 회원가입이
있는데 너무 만만하게 본것 같다. 이렇게 작업해야 할 코드들이 많을 줄은 몰랐다.
작업하고 나서도 막상 실행하면 여기저기서 오류가 발생하는데 처음엔 오류때문에 어리둥절하고
어떻게 해야할지 진땀을 뺏지만 오류하나하나를 구글 검색을 하거나 유튜브 통해 찾아서 오류를 해결하니깐
왠지모르게 뿌듯하면서 자신감이 쌓여나가는 것 같다. 계속해서 오류랑 많이 친해지도록 노력해야겠다.

2일차
4인 1조가 되서 프로젝트를 진행하는데 2명이 질병결석으로 2명이 프로젝트를 진행을 했다.
서로 코드를 다 짜고 한 프로젝트 안에  코드를 넣어 실행을 시켜봤지만 역시나 순조롭게 진행되지 못했다..
비록 2명에서 머리를 맞대어 하나하나 풀어 갔지만 내가 설계한 코드가 나의 생각하고 다르게 결과가 나와
좀 실망스러웠다. 그 같이 진행하는 팀원한테도 많이 미안함을 느꼈다..
열심히 한다고 했지만 결과는 만족스럽지 못했다. 첫술에 배부르냐라는 속담이 처럼 이 과정또한 훈련이다라고
생각하며 팀원한테 피해가 가지 않도록 최대한 죽기살기로 열심히 해보는 수밖에 없는것같다..
좌절한다고 바뀌는것도 없고 누가 도와주는것도 없으니 죽기살기로 해보는것이다.. 오늘 있었던 일을 잊지말고
더욱더 열심히 해야겠다.

3일차
프로젝트 마지막날이다. 아직도 해야할건 많은데 시간은 빠른속도로 달려가고 있는듯한 느낌을 받는다.
하면서 느낀점이 다른팀에 비해 너무 소통이 없었고, 변수하나하나 어떻게 할 것인지 정했어야 했는데 너무 
그냥 하면 되겠지라는 생각으로 하다가 거기에 시간을 빼았기고, 코드를 짜는 사람이 사용자 입장에서 어느 위치에
배치를 시켜놓을 것인가를 깊게 생각을 안하고 무턱대고 시작한게 뒤늦게 후회를 하고 있다. 앞으론 좀더 신중하게
진행을 해야될 것 같고, 뭔가 아쉬움이 많이 남는 날이였다.. 앞으로 좀 더 힘내자!!


===================================================================
***********메뉴를 db에 입력해서 관리하는 방법(FrontController에 아래 코드 사용하지 않기)*******

      Map<String, Command> menus = new HashMap<String, Command>();
      menus.put("/board/list.do", new Board_ListCommand());
      menus.put("/board/insertui.do", new Board_InsertUICommand());
      menus.put("/board/insert.do", new Board_InsertCommand());
      menus.put("/board/read.do", new Board_ReadCommand());
      menus.put("/board/updateui.do", new Board_UpdateUICommand());
      menus.put("/board/update.do", new Board_UpdateCommand());
      menus.put("/board/delete.do", new Board_DeleteCommand());
      menus.put("/board/replyui.do", new Board_ReplyUICommand());
      menus.put("/board/reply.do", new Board_ReplyCommand());
      menus.put("/board/search.do", new SearchCommand());
      
===========================
1. 서비스메뉴(uri)와 Command클래스의 풀패키지명을 저장할 수 있는 테이블 생성(tbl_menu)
CREATE TABLE tbl_menu(
uri VARCHAR2(100),
fullpkg VARCHAR2(100) NOT NULL,
CONSTRAINT pk_menu_uri PRIMARY KEY(uri)
);


2. 1 번에서 생성한 테이블에 서비스 uri와 Command클래스의 풀패키지명 저장
INSERT INTO tbl_menu VALUES INSERT INTO tbl_menu VALUES ('/board/list.do','kr.co.command.Board_ListCommand')
INSERT INTO tbl_menu VALUES ('/board/insertui.do','kr.co.command.Board_InsertUICommand')
INSERT INTO tbl_menu VALUES ('/board/insert.do','kr.co.command.Board_InsertCommand')
INSERT INTO tbl_menu VALUES ('/board/read.do','kr.co.command.Board_ReadCommand')
INSERT INTO tbl_menu VALUES ('/board/updateui.do','kr.co.command.Board_UpdateUICommand')
INSERT INTO tbl_menu VALUES ('/board/update.do','kr.co.command.Board_UpdateCommand')
INSERT INTO tbl_menu VALUES ('/board/delete.do','kr.co.command.Board_DeleteCommand')
INSERT INTO tbl_menu VALUES ('/board/replyui.do','kr.co.command.Board_ReplyUICommand')
INSERT INTO tbl_menu VALUES ('/board/reply.do','kr.co.command.Board_ReplyCommand')


3. 1 번의 테이블 데이터를 가져오기
public Map<String, Command> callMenus() {
      Map<String, Command> menus = new HashMap<String, Command>();

      Connection conn = null;
      PreparedStatement pstmt = null;
      String sql = "SELECT * FROM tbl_menu";
      ResultSet rs = null;

      try {
         conn = dataFactory.getConnection();
         pstmt = conn.prepareStatement(sql);
         rs = pstmt.executeQuery();

         while (rs.next()) {
            String uri = rs.getString("uri");
            String fullpkg = rs.getString("fullpkg");
*******************************풀패키지명 문자열을 이용해서 객체 만들기(배운 적 없음*************************************
            Class<?> menu = Class.forName(fullpkg);

            Constructor<?> cons = menu.getConstructor();

            Command t = (Command) cons.newInstance();    //Command -> 자료형만 맞게 넣어주면 됨
*****************************************************************************************************************************
            menus.put(uri, t);
         }
      } catch (Exception e) {
         e.printStackTrace();
      } finally {
         closeAll(rs, pstmt, conn);
      }

      return menus;
   }



4. FrontController에서 callMenus( )메서드 호출
   - callMenus( )메서드가 들어 있는 클래스를 이용해서 객체 만들기
     해당DAO클래스 dao = new 해당DAO클래스( )
   - Map<String, Command> menus = dao.callMenus( );



===============================================
	<h1>로그인 화면</h1>
	<h3>대우직업능력개발원</h3>
	<%
		String error = request.getParameter("error");
		if(error!=null){
			out.print("<div class='alert alert-danger'>");
			out.print("아이디와 비밀번호를 확인해주세요.");
			out.print("</div>");
		}
	%>
	<form class="form-signin" action="/member/login.do" method="post">	
		<div class="form-group">			
			<input name="mid" class="form-control" placeholder="아이디" required>
		</div>
		<div class="form-group">			
			<input type="password" name="password" class="form-control" placeholder="비밀번호" required>
		</div>
			<input type="submit" title="로그인" value="로그인" class="ej_login_btn" id="ej-Button">	
				
			<br>
			<br>
			<input type="submit" value="회원가입">
			<input type="submit" value="아이디/비밀번호찾기">	
			<br>
			<br>
			*직원은 인트라넷으로 접속하세오.		
	</form>

=====================================
value="2022-12-22"

<검색은 jsp 런타임이 없을 때>
1. 타인의 프로젝트 압축파일을 임포트했을 때, 에러나는 이유
   - 타인이 설치한 톰캣 서버의 버전과 자신이 설치한 톰캣 서버의 버전이 안 맞아서
      -> Server Runtime [apache-tomcat-~]이 설치가 안 되어서 그러함.

2. 해결책
   - 프로젝트에 마우스 커서를 놓고 우클릭
     -> [Build Path] 항목에 커서를 올려 놓으면, [Configure Build Path] 메뉴가 나옴.
         이를 클릭
         -> Properties for 프로젝트명 팝업창이 뜸.
             -> 우측 화면은 [Order and Export] 탭 화면인데
                  [Libraries]창을 클릭
                  -> Server Runtime [apa~]에 unbind된 항목을 클릭하고 우측에 있는 [Remove] 버튼을 클릭하여 제거
                  -> [Remove] 버튼을 기준으로 위로 4 번째에 있는 [Add Libray] 버튼을 클릭하면 [Add Library] 팝업창이 뜸
                      -> 밑에서 3 번재에 있는 [Server Runtime] 메뉴 더블클릭
                           -> [apache-tomcat-~] 선택 후 finish
                           ->  [Apply and Close] 버튼 클릭

   이렇게 하면 실행에는 문제가 없음. 그러나 프로젝트에 에러 표시가 나타남.
   
   - 프로젝트에 마우스 커서를 놓고 우클릭
      -> 최하단에 있는 [Properties]항목을 클릭
           -> Properties for 프로젝트명 팝업창이 뜸.
               -> 좌측의 메뉴 중 [Project Facets]를 클릭
                   -> 우측의 내용이 변함.
                   -> 우측이 2 개로 분할되어 있음. 
                   -> 우측의 2 번째 화면은 2 개의 탭으로 되어 있음.
                        -> [Details] 탭 화면이 보임. 
                        -> 그 옆에 있는 [Runtimes] 탭을 클릭하면, 
                             -> 2 종류의 apache-tomcat-~이 있음.
                                  -> 그 중 체크가 안 되어 있는 것을 체크하고, 체크 되어 있는 것은 체크를 풀어줌.
                                  -> [Apply and Clos
		

오류
cannot insert NULL into ("DW1"."TBL_MEMBERLOGIN"."GENDER")
=> 기본키에 null이 안들어가게 설정하면 된다.






					int mid = rs.getInt("mid");
					String name = rs.getString("name");
					String brith = rs.getString("brith");
					String gender = rs.getString("gender");
										
					MemberDTO dto = new MemberDTO(mid, null, name, brith, -1, gender);



String sql = "SELECT mid, name, To_CHAR(birth, 'yyyy-mm-dd') birth, gender "
					+ "FROM tbl_memberlogin";



String sql = "SELECT mid, name, To_CHAR(birth, 'yyyy-mm-dd') birth, gender "
					+ "FROM tbl_memberlogin WHERE mid = ?";



============================================
3일차
회원정보수정에서 비밀번호 불일치 경우에 메시지 창 띄우기
jsp에서
	<script type="text/javascript">
		let err = ${param.err};
		if(err == 1){
			alert("비밀번호가 틀렸습니다.");
		}				
	</script>

입력을하고
Member_UpdateCommand 에서 return 값쪽에 "&err=1" 코드를 넣어준다
return new CommandAction(true, "/member/updateui.do?mid="+mid+"&err=1");


=======================
insert.jsp 파일

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8" session="false"%>
    
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>  

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>회원가입 화면</title>
	<h1>대우직업능력개발원 회원가입</h1>
	<form action="/member/insert.do" method="post">
		이름* <br>
		<input name="name" required><br>
		아이디* <br>
		<input name="mid" required><br>
		비밀번호* <br>
		<input name="mpw" required><br>
		비밀번호확인* <br>
		<input name="mpw" required><br>				
		생년월일* <br>
		<input type="date" name="birth" value="2022-12-22" required><br>
		<br>
		<input type="submit" value="회원가입">
	</form>

</body>
</html>



================

SELECT * FROM tbl_member
INSERT INTO tbl_member (mid, mpw, name, birth) VALUES (?, ?, ?, ?)
SELECT mid, name, To_CHAR(birth, 'yyyy-mm-dd') birth FROM tbl_member WHERE mid = ?
UPDATE tbl_member SET name = ?, birth = ? WHERE mid = ? AND mpw = ?
DELETE FROM tbl_member WHERE mid = ? AND mpw = ?
SELECT * FROM tbl_member WHERE mid = ? AND mpw = ?


SELECT * FROM tbl_member

ALTER TABLE tbl_member DROP CONSTRAINT pk_member_mid
DROP TABLE tbl_member

CREATE TABLE tbl_member(
mid VARCHAR(30) NOT NULL,
mpw VARCHAR(30) NOT NULL,
name VARCHAR(45) NOT NULL,
birth DATE NOT NULL, 
CONSTRAINT pk_member_mid PRIMARY KEY(mid)
)


==========================
종합
DELETE FROM tbl_board


ALTER TABLE tbl_board ADD CONSTRAINT pk_board_bid foreign KEY(bid) REFERENCES tbl_member (mid);
ALTER TABLE tbl_board ADD name VARCHAR2(30) NOT NULL;
DROP TABLE tbl_member
DROP SEQUENCE seq_board_num
DROP TABLE tbl_board
DROP TABLE tbl_menu

commit

ALTER TABLE tbl_board DROP CONSTRAINT pk_board_bid
CREATE
TABLE tbl_board(
num NUMBER,
bid VARCHAR2(15) NOT NULL,
title VARCHAR2(45) NOT NULL,
content VARCHAR2(3000) NOT NULL,
pw NUMBER NOT NULL,
writeday DATE DEFAULT SYSDATE,
readcnt NUMBER DEFAULT 0,
repRoot NUMBER,
repStep NUMBER,
repIndent NUMBER,
CONSTRAINT pk_board_num
PRIMARY KEY(num)
)

SELECT * FROM tbl_board a FULL OUTER JOIN tbl_member b ON a.num = b.mid

CREATE TABLE tbl_menu(
uri VARCHAR2(100),
fullpkg VARCHAR2(100) NOT NULL,
CONSTRAINT pk_menu_uri PRIMARY KEY(uri)
);


CREATE SEQUENCE seq_board_num
START WITH 1
INCREMENT BY 1;


INSERT INTO tbl_menu VALUES ('/board/list.do','kr.co.command.Board_ListCommand');
INSERT INTO tbl_menu VALUES ('/board/insertui.do','kr.co.command.Board_InsertUICommand');
INSERT INTO tbl_menu VALUES ('/board/insert.do','kr.co.command.Board_InsertCommand');
INSERT INTO tbl_menu VALUES ('/board/read.do','kr.co.command.Board_ReadCommand');
INSERT INTO tbl_menu VALUES ('/board/updateui.do','kr.co.command.Board_UpdateUICommand');
INSERT INTO tbl_menu VALUES ('/board/update.do','kr.co.command.Board_UpdateCommand');
INSERT INTO tbl_menu VALUES ('/board/delete.do','kr.co.command.Board_DeleteCommand');
INSERT INTO tbl_menu VALUES ('/board/reply.do','kr.co.command.Board_ReplyCommand');
INSERT INTO tbl_menu VALUES ('/board/replyui.do','kr.co.command.Board_ReplyUICommand');
INSERT INTO tbl_menu VALUES ('/board/search.do','kr.co.command.Board_SearchCommand');
INSERT INTO tbl_menu VALUES ('/member/list.do','kr.co.command.Member_ListCommand');
INSERT INTO tbl_menu VALUES ('/member/insertui.do','kr.co.command.Member_InsertUICommand');
INSERT INTO tbl_menu VALUES ('/member/insert.do','kr.co.command.Member_InsertCommand');
INSERT INTO tbl_menu VALUES ('/member/read.do','kr.co.command.Member_ReadCommand');
INSERT INTO tbl_menu VALUES ('/member/updateui.do','kr.co.command.Member_UpdateUICommand');
INSERT INTO tbl_menu VALUES ('/member/update.do','kr.co.command.Member_UpdateCommand');
INSERT INTO tbl_menu VALUES ('/member/delete.do','kr.co.command.Member_DeleteCommand');
INSERT INTO tbl_menu VALUES ('/member/loginui.do','kr.co.command.Member_LoginUICommand');
INSERT INTO tbl_menu VALUES ('/member/login.do','kr.co.command.Member_LoginCommand');
INSERT INTO tbl_menu VALUES ('/member/logout.do','kr.co.command.Member_LogoutCommand');

commit

SELECT * FROM tbl_member

ALTER TABLE tbl_member DROP CONSTRAINT pk_member_mid
DROP TABLE tbl_member

SELECT * FROM tbl_member
INSERT INTO tbl_member (mid, mpw, name, birth) VALUES (?, ?, ?, ?)
SELECT mid, name, To_CHAR(birth, 'yyyy-mm-dd') birth FROM tbl_member WHERE mid = ?
UPDATE tbl_member SET name = ?, birth = ? WHERE mid = ? AND mpw = ?
DELETE FROM tbl_member WHERE mid = ? AND mpw = ?
SELECT * FROM tbl_member WHERE mid = ? AND mpw = ?

CREATE TABLE tbl_member(
mid VARCHAR(30) NOT NULL,
mpw VARCHAR(30) NOT NULL,
name VARCHAR(45) NOT NULL,
birth DATE NOT NULL, 
CONSTRAINT pk_member_mid PRIMARY KEY(mid)
)












