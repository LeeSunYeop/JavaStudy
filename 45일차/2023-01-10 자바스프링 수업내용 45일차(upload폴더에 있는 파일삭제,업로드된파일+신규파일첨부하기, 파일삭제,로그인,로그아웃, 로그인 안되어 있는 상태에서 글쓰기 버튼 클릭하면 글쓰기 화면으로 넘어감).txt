
======================= 이미업로드한 파일 삭제하기==================
< update jsp 추가 작업 >

<script type="text/javascript">
		
		$(document).ready(function() {
			let formData = new FormData();	
			
			let uploadedFileDeleteList = [];  ---요기
			
			$("#uploaded_list").on("click", ".del", function() { //이미업로드"된" 파일 삭제할때
				let filename = $(this).prev().prev().attr("alt");
				 uploadedFileDeleteList.push(filename);   ----요기
			   
				
				$(this).parent().parent().parent().remove();
			});




=============================
< BoardController 추가 작업 >  

	// update.jsp에서 let uploadedFileDeleteList = []; 일때
	// update.jsp에서 uploadedFileDeleteList.push(filename);
	@RequestMapping(value = "/update2/{bno}", method = RequestMethod.POST)
	@ResponseBody
	public int update2(@PathVariable("bno") Integer bno, 
						MultipartHttpServletRequest request) {
		int result = 1;
		
		String id = request.getParameter("id");
		String pw = request.getParameter("pw");
		String title = request.getParameter("title");
		String content = request.getParameter("content");
		
		String uploadedFileDeleteListStr = request.getParameter("uploadedFileDeleteList");
		
		String[] uploadedFileDeleteListArr = uploadedFileDeleteListStr.split(",");
		
		List<String> uploadedFileDeleteList = new ArrayList<String>();
		
		for(int i=0; i<uploadedFileDeleteListArr.length; i++) {
			
			String filename = uploadedFileDeleteListArr[i].trim();
			
			if(filename.equals("")) {    --- 이코드를 안했을때 신규 글등록하면서 파일도 같이 업로드한다 ->
				break;		글등록한걸 신규파일을 또 올리려고 수정을한다 ->
			}			등록하고 확인 버튼을 누르면 DB에는 저장이 되어있지만  
						파일이 실제로 삭제가 되어있는 상태가 된다. 
						이유는 update jsp에 let uploadedFileDeleteList = []; 에서
						파일명이 [ ] 빈값으로 되어 있는상태에서 있다고 인식을해
						이 문제를 막아주기위해 ""안에 빈값이 있으면 if문을 빠져나오는걸
						적어줘야한다.
			uploadedFileDeleteList.add(filename);
		}
		
		Map<String, MultipartFile> map = request.getFileMap();
		Set<String> set = map.keySet();
		List<String> keyList = new ArrayList<String>(set);
		List<String> uploadedFileList = new ArrayList<String>();
		
		for(int i=0; i<keyList.size(); i++) {
			String key = keyList.get(i);
			MultipartFile file = map.get(key);
			
			try {
				String uploadedFilename = UploadFileUtils.uploadFile(uploadPath, file, sc);
				uploadedFileList.add(uploadedFilename);
				Thread.sleep(50);
			} catch (Exception e) {				
				e.printStackTrace();
			}
		}
		
		BoardDTO dto = new BoardDTO(id, bno, pw, title, content);
		dto.setUploadedFileList(uploadedFileList);
		
		result = bService.update(dto, uploadedFileDeleteList);
		
		if (result >= 1) {
			try {
				UploadFileUtils.deleteUploadFiles(uploadPath, uploadedFileDeleteList);
			} catch (Exception e) {				
				e.printStackTrace();
			}
		} else {  //수정화면에서 업로드했던 파일을 삭제하는거
			try {
				UploadFileUtils.deleteUploadFiles(uploadPath, uploadedFileList);
			} catch (Exception e) {				
				e.printStackTrace();
			}
		}
		
		return result;
	}


=======================
< BoardServiceImpl.java 추가 작업 >

	@Override
	@Transactional
	public int update(BoardDTO dto, List<String> uploadedFileDeleteList) {
		int result = 1;		
		
		result = bDao.update(dto);
		
		for(int i=0; i<uploadedFileDeleteList.size(); i++) {
			String uploadedFilename = uploadedFileDeleteList.get(i);
			int ers = aDao.deleteByFilename(uploadedFilename);
			// ers: 실행결과
			if(ers < 1) {
				
				result = 0;
				
				break;
			}
		}
		
		List<String> list = dto.getUploadedFileList();    ----추가
		for (int i = 0; i < list.size(); i++) {
			String uploadedFilename = list.get(i);
			Map<String, Object> map = new HashMap<String, Object>();

			map.put("uploadedFilename", uploadedFilename);
			map.put("bno", dto.getBno());

			aDao.insert(map);
		}
				
		return result;		
	}


=======================파일삭제하기=======================
< BoardController.java 추가 작업 >

	@RequestMapping(value = "/delete/{bno}", method = RequestMethod.POST)
	@ResponseBody
	public Integer delete(@PathVariable Integer bno, 
			@RequestParam Map<String, Object> map) {
		Integer result = 0;
		
		map.put("bno", bno);
		
		List<String> list = bService.getFilenames(bno);  -- 추가
		
		result = bService.delete(map);
		
		if(result >= 1) {			-- 추가
			try {
				UploadFileUtils.deleteUploadFiles(uploadPath, list);
			} catch (Exception e) {				
				e.printStackTrace();
			}
		}
		
		return result;
	}


======================= 로그인구현======================================
< kr.co.member.interceptor 패키지생성에 LoginInterceptor 클래스 생성 >

package kr.co.member.interceptor;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

public class LoginInterceptor extends HandlerInterceptorAdapter{

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		
		
		
		return true;
	}

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
			ModelAndView modelAndView) throws Exception {
		
		
	}		

}


=======================
< servlet-context.xml 추가 작업 >

	<beans:bean class="kr.co.member.interceptor.LoginInterceptor" id="loginInterceptor"></beans:bean>
	
	
	
	<interceptors>
		<interceptor>
			<mapping path="/member/loginPost"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
	</interceptors>

=======================
< MemberController.java  추가 작업 >

	@RequestMapping(value = "/login", method = RequestMethod.GET)
	public String login() {
		
		return "member/login";
	}

=======================
< member 폴더에 login jsp파일 생성 >

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8" session="false"%>
    
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

<title>로그인 화면</title>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct" crossorigin="anonymous"></script>

</head>
<body>
	
	<div class="container text-center">
		<form class="form-signin" action="/member/loginPost" method="POST">
 			 <img class="mb-4" src="/resources/img/gf.png" alt="dw회사로고" width="72" height="72">
  			 <!-- src="/resources/img/gf.png" 나중에 회사로고 넣으면 된다. -->
  			 
  			 <input name="id" id="id" class="form-control my-4" placeholder="아이디를 입력하세요." required autofocus>
  		     
  			 <input name="pw" type="password" id="pw" class="form-control my-4" placeholder="비밀번호를 입력하세요." required>
    		 
  			 <button class="btn btn-lg btn-primary btn-block" type="submit">로그인</button>  			 
		 </form>
		 
	</div>


</body>
</html>


=======================
< MemberController 추가 작업 >

	@Autowired
	private MemberService mService;

	@RequestMapping(value = "/loginPost", method = RequestMethod.POST)
	public String login(MemberDTO login) {
		
		login = mService.login(login);
		
		return "redirect:/board/list";
	}

	@RequestMapping(value = "/login", method = RequestMethod.GET)
	public String login() {
		
		return "member/login";
	}


=======================
< MemberService 추가 작업 >

MemberDTO login(MemberDTO login);

=======================
< MemberServiceImpl 추가 작업 >

	@Override
	public MemberDTO login(MemberDTO login) {
		// TODO Auto-generated method stub
		login = mDao.login(login);
		
		return login;
	}


=======================
< MemberDAO 추가 작업 >

MemberDTO login(MemberDTO login);


=======================
 < MemberDAOImpl.java 추가 작업 >

	@Override
	public MemberDTO login(MemberDTO login) {
		// TODO Auto-generated method stub
		return session.selectOne(NS+".login", login);
	}

=======================
< memberMapper.xml 추가 작업 >

<mapper namespace="kr.co.member">
	<select id="login" resultType="MemberDTO">
		SELECT id, name FROM tbl_member WHERE id=#{id} AND pw=#{pw}
	</select>


=======================
< MemberController.java 추가 작업 >

	@RequestMapping(value = "/loginPost", method = RequestMethod.POST)
	public void login(MemberDTO login, Model model) {
		
		login = mService.login(login);
		
		model.addAttribute("login", login);
		
		//return "redirect:/board/list";
	}



=======================
< LoginInterceptor 추가 작업 >

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		
		//HttpSession session = request.getSession();
		//session.invalidate();  
		// 로그인되어 있는상태에서 로그인을 시도한다면..이렇게 짠다.
		
		return true;
	}

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
			ModelAndView modelAndView) throws Exception {
		
		HttpSession session = request.getSession(); 
		// 로그인일때 getSession(); 이거나 getSession(true); 를 해줘야한다.
		
		Map<String, Object> map = modelAndView.getModel();
		
		Object login = map.get("login");
		
		if(login != null) {
			session.setAttribute("login", login);
			response.sendRedirect("/"); //list로 간다
		}
	}	

==========================
response.sendRedirect("/");
- 인터셉터에서 뷰 정보를 조작하는 상황에서

1. mvc 핸들러에 return 값이 있을 때...
응답이 이미 커밋된 후에는, sendRedirect()를 호출 할 수 없습니다.
- return "redirect:/"를 주석 처리함.

2. 인터셉터가 적용되는 mvc 핸들러의 view와 관련된 파일이 없을 때..
javax.servlet.ServletException: 파일 [&#47;WEB-INF&47;view&#47;mem~] --에러메시지
- mvc 핸들러와 관련된 view를 생성해줌.



=======================
< member 폴더에 loginPost jsp 파일 생성 >

파일만 생성해준다.

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8" session="false"%>
    
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

<title>Insert title here</title>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct" crossorigin="anonymous"></script>

</head>
<body>

</body>
</html>



=======================
< board 폴더에 insert jsp 추가 작업 >

session="false"
로그인 페이지,

<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>  --- session false 삭제


		<form action="/board/insert" method="post">
			<div class="form-group row">
				<label for="id">작성자</label> 
				<input class="form-control" value="${login.id}" id="id"	name="id" readonly> --추가
			</div>




=======================
< views 폴더에  part_header jsp파일 생성 >




=======================
< board 폴더에 list.jsp 추가 작업 >

<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct" crossorigin="anonymous"></script>
</head>
<body>

<div class="container-fluid">   ---여기서부터 추가
	<jsp:include page="../part_header.jsp"/>
</div>



=======================
< 각 jsp 파일 추가 작업 >

<body> 아래에다 추가해주기

<div class="container-fluid">   
	<jsp:include page="../part_header.jsp"/>
</div>

=======================로그아웃구현=====================
< kr.co.member.interceptor 패키지에 LogoutInterceptor 클래스 생성 >

package kr.co.member.interceptor;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

public class LogoutInterceptor extends HandlerInterceptorAdapter{

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		
		HttpSession session = request.getSession(false);
		
		if (session != null) {
			session.invalidate();
		}
		
		return true;
	}

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
			ModelAndView modelAndView) throws Exception {
		
	
	}
	
	

}




=======================
< servlet-context.xml 추가 작업 >

	<beans:bean class="kr.co.member.interceptor.LogoutInterceptor" id="logoutInterceptor"></beans:bean>

	<interceptors>
		<interceptor>
			<mapping path="/member/logout"/>
			<beans:ref bean="logoutInterceptor"/>
		</interceptor>
	</interceptors>


======================= 여기까지 로그아웃=================
< MemberController.java 추가 작업 >

	@RequestMapping(value = "/logout", method = RequestMethod.GET)
	public String logout() {
		
		return "redirect:/";
	}



=======================
< board 폴더에 read jsp 추가 작업 >

<%@page import="org.springframework.http.MediaType"%>
<%@page import="kr.co.common.utils.UploadFileUtils"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%> --- session="false" 삭제

			<div class="form-group row">
				<a href="/board/list/${curpage}/${criteria}${empty keyword?'':'/'}${keyword}" class="btn btn-light">목록</a> 
				
				<c:if test="${dto.id == login.id}">  -- 추가
				<a class="btn btn-light" id="read_btn_updateui">수정</a> <!--로그인한 사람이 같아야한다-->
				<a class="btn btn-light" id="read_btn_delete">삭제</a>  <!--로그인한 사람이 같아야한다-->
				</c:if>				-- 추가

				<c:if test="${not empty login}">  -- 추가
				<a class="btn btn-light" id="read_btn_replyui">댓글</a>
				</c:if>				-- 추가
			</div>

		<div class="collapse" id="mycollapse">
			<div class="form-group row">
				<label for="read_input_col_id">작성자</label> 
				<input class="form-control" id="read_input_col_id" value="${login.id}">  --추가
			</div>




1. 로그인이 되었습니다. 그래서
게시글을 수정하려고 합니다. 그런데
수정하려고 하는 게시글은 m002가 작성했습니다.
나는 m001입니다.
수정할 수 있을까요? 없을까요? 안됩니다.

read.jsp에서 
수정/삭제 버튼을 활성화시키는 조건을
작성자와 로그인한 자가 같을 때만..


=============로그인 안되어 있는 상태에서 글쓰기 버튼 클릭하면 글쓰기 화면으로 넘어감=============
< kr.co.member.interceptor 패키지에 AuthInterceptor 클래스 생성 >
1. 로그인이 안 되어 있는 상태에서
글쓰기 버튼을 클릭하면
- 현재: 글쓰기 화면으로 넘어감.
- 보완: 로그인 화면으로 넘어가게 함.

package kr.co.member.interceptor;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

public class AuthInterceptor extends HandlerInterceptorAdapter{

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		
		HttpSession session = request.getSession(false);
		
		if (session != null) {
			
			Object login = session.getAttribute("login");
			if (login == null) {
				response.sendRedirect("/member/login");		
				return false;
			}
			
		}else {
			response.sendRedirect("/member/login");			
			return false; //controller에 안보낸다는 의미
		}
		
		return true;
	}

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
			ModelAndView modelAndView) throws Exception {
		
	
	}
	
	

}



=======================
< servlet-context.xml 추가 작업 >


	<beans:bean class="kr.co.member.interceptor.AuthInterceptor" id="authInterceptor"></beans:bean>

	<interceptors>
		<interceptor>
			<mapping path="/board/insert"/>
			<mapping path="/board/updateui/**/**"/>
			<mapping path="/board/updateui/**/**/**/**"/>
			<beans:ref bean="authInterceptor"/>
		</interceptor>
	</interceptors>


=======================
< 추가 작업 >






=======================
< 추가 작업 >


=======================
< 추가 작업 >


=======================
< 추가 작업 >



=======================
< 추가 작업 >

=======================
< 추가 작업 >






